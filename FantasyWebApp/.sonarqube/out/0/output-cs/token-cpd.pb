×

7D:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Services 
. 
AddRazorPages 
( 
)  
;  !
var 
app 
= 	
builder
 
. 
Build 
( 
) 
; 
if

 
(

 
!

 
app

 
.

 	
Environment

	 
.

 
IsDevelopment

 "
(

" #
)

# $
)

$ %
{ 
app 
. 
UseExceptionHandler 
( 
$str $
)$ %
;% &
app 
. 
UseHsts 
( 
) 
; 
} 
app 
. 
UseStaticFiles 
( 
) 
; 
app 
. 

UseRouting 
( 
) 
; 
app 
. 
MapRazorPages 
( 
) 
; 
app 
. 
Run 
( 
) 	
;	 
Ú
DD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Privacy.cshtml.cs
	namespace 	
FantasyWebApp
 
. 
Pages 
{ 
public 

class 
PrivacyModel 
: 
	PageModel  )
{ 
private 
readonly 
ILogger  
<  !
PrivacyModel! -
>- .
_logger/ 6
;6 7
public

 
PrivacyModel

 
(

 
ILogger

 #
<

# $
PrivacyModel

$ 0
>

0 1
logger

2 8
)

8 9
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
} 	
} 
} µ
JD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Players\Index.cshtml.cs
	namespace 	
FantasyCricketApp
 
. 
Pages !
.! "
Players" )
{ 
public 

class 

IndexModel 
: 
	PageModel '
{		 
public

 
List

 
<

 
Player

 
>

 
Players

 #
{

$ %
get

& )
;

) *
set

+ .
;

. /
}

0 1
public 
void 
OnGet 
( 
) 
{ 	
Players 
= 
PlayerRepository &
.& '
GetAll' -
(- .
). /
;/ 0
} 	
} 
} Ö
ID:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Players\Edit.cshtml.cs
	namespace 	
FantasyCricketApp
 
. 
Pages !
.! "
Players" )
{ 
public 

class 
	EditModel 
: 
	PageModel &
{		 
[

 	
BindProperty

	 
]

 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
public 
IActionResult 
OnGet "
(" #
int# &
id' )
)) *
{ 	
Player 
= 
PlayerRepository %
.% &
GetById& -
(- .
id. 0
)0 1
;1 2
if 
( 
Player 
== 
null 
) 
return 
RedirectToPage %
(% &
$str& -
)- .
;. /
return 
Page 
( 
) 
; 
} 	
public 
IActionResult 
OnPost #
(# $
)$ %
{ 	
if 
( 
! 

ModelState 
. 
IsValid #
)# $
return 
Page 
( 
) 
; 
PlayerRepository 
. 
Update #
(# $
Player$ *
)* +
;+ ,
return 
RedirectToPage !
(! "
$str" )
)) *
;* +
} 	
} 
} è
LD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Players\Details.cshtml.cs
	namespace 	
FantasyCricketApp
 
. 
Pages !
.! "
Players" )
{ 
public 

class 
DetailsModel 
: 
	PageModel  )
{		 
public

 
Player

 
Player

 
{

 
get

 "
;

" #
set

$ '
;

' (
}

) *
public 
IActionResult 
OnGet "
(" #
int# &
id' )
)) *
{ 	
Player 
= 
PlayerRepository %
.% &
GetById& -
(- .
id. 0
)0 1
;1 2
if 
( 
Player 
== 
null 
) 
return 
RedirectToPage %
(% &
$str& -
)- .
;. /
return 
Page 
( 
) 
; 
} 	
} 
} «
KD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Players\Delete.cshtml.cs
	namespace 	
FantasyCricketApp
 
. 
Pages !
.! "
Players" )
{ 
public 

class 
DeleteModel 
: 
	PageModel (
{		 
[

 	
BindProperty

	 
]

 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
public 
IActionResult 
OnGet "
(" #
int# &
id' )
)) *
{ 	
Player 
= 
PlayerRepository %
.% &
GetById& -
(- .
id. 0
)0 1
;1 2
if 
( 
Player 
== 
null 
) 
return 
RedirectToPage %
(% &
$str& -
)- .
;. /
return 
Page 
( 
) 
; 
} 	
public 
IActionResult 
OnPost #
(# $
int$ '
id( *
)* +
{ 	
PlayerRepository 
. 
Delete #
(# $
id$ &
)& '
;' (
return 
RedirectToPage !
(! "
$str" )
)) *
;* +
} 	
} 
} å	
KD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Players\Create.cshtml.cs
	namespace 	
FantasyCricketApp
 
. 
Pages !
.! "
Players" )
{ 
public 

class 
CreateModel 
: 
	PageModel (
{		 
[

 	
BindProperty

	 
]

 
public 
Player 
Player 
{ 
get "
;" #
set$ '
;' (
}) *
public 
void 
OnGet 
( 
) 
{ 
} 
public 
IActionResult 
OnPost #
(# $
)$ %
{ 	
if 
( 
! 

ModelState 
. 
IsValid #
)# $
return 
Page 
( 
) 
; 
PlayerRepository 
. 
Add  
(  !
Player! '
)' (
;( )
return 
RedirectToPage !
(! "
$str" )
)) *
;* +
} 	
} 
} Ð
BD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Index.cshtml.cs
	namespace 	
FantasyWebApp
 
. 
Pages 
{ 
public 

class 

IndexModel 
: 
	PageModel '
{ 
private 
readonly 
ILogger  
<  !

IndexModel! +
>+ ,
_logger- 4
;4 5
public

 

IndexModel

 
(

 
ILogger

 !
<

! "

IndexModel

" ,
>

, -
logger

. 4
)

4 5
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
} 	
} 
} Ý
BD:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Pages\Error.cshtml.cs
	namespace 	
FantasyWebApp
 
. 
Pages 
{ 
[ 
ResponseCache 
( 
Duration 
= 
$num 
,  
Location! )
=* +!
ResponseCacheLocation, A
.A B
NoneB F
,F G
NoStoreH O
=P Q
trueR V
)V W
]W X
[ "
IgnoreAntiforgeryToken 
] 
public		 

class		 

ErrorModel		 
:		 
	PageModel		 '
{

 
public 
string 
? 
	RequestId  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
bool 
ShowRequestId !
=>" $
!% &
string& ,
., -
IsNullOrEmpty- :
(: ;
	RequestId; D
)D E
;E F
private 
readonly 
ILogger  
<  !

ErrorModel! +
>+ ,
_logger- 4
;4 5
public 

ErrorModel 
( 
ILogger !
<! "

ErrorModel" ,
>, -
logger. 4
)4 5
{ 	
_logger 
= 
logger 
; 
} 	
public 
void 
OnGet 
( 
) 
{ 	
	RequestId 
= 
Activity  
.  !
Current! (
?( )
.) *
Id* ,
??- /
HttpContext0 ;
.; <
TraceIdentifier< K
;K L
} 	
} 
} Ô
=D:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Models\Player.cs
	namespace 	
FantasyCricketApp
 
. 
Models "
{ 
public 

class 
Player 
{ 
public 
int 
Id 
{ 
get 
; 
set  
;  !
}" #
[		 	
Required			 
]		 
[

 	
StringLength

	 
(

 
$num

 
)

 
]

 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Team 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Required	 
] 
[ 	
StringLength	 
( 
$num 
) 
] 
public 
string 
Role 
{ 
get  
;  !
set" %
;% &
}' (
[ 	
Range	 
( 
$num 
, 
$num 
) 
] 
public 
decimal 
Price 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} #
ED:\PipeLine_proj\FantasyWebApp\FantasyWebApp\Data\PlayerRepository.cs
	namespace 	
FantasyCricketApp
 
. 
Data  
{ 
public 

static 
class 
PlayerRepository (
{ 
private		 
static		 
readonly		 
List		  $
<		$ %
Player		% +
>		+ ,
Players		- 4
=		5 6
new		7 :
(		: ;
)		; <
{

 	
new 
Player 
{ 
Id 
= 
$num 
,  
Name! %
=& '
$str( 5
,5 6
Team7 ;
=< =
$str> C
,C D
RoleE I
=J K
$strL U
,U V
PriceW \
=] ^
$num_ c
}d e
,e f
new 
Player 
{ 
Id 
= 
$num 
,  
Name! %
=& '
$str( 8
,8 9
Team: >
=? @
$strA E
,E F
RoleG K
=L M
$strN V
,V W
PriceX ]
=^ _
$num` d
}e f
} 	
;	 

public 
static 
List 
< 
Player !
>! "
GetAll# )
() *
)* +
=>, .
Players 
. 
OrderBy 
( 
p 
=>  
p! "
." #
Id# %
)% &
.& '
ToList' -
(- .
). /
;/ 0
public 
static 
Player 
GetById $
($ %
int% (
id) +
)+ ,
=>- /
Players 
. 
FirstOrDefault "
(" #
p# $
=>% '
p( )
.) *
Id* ,
==- /
id0 2
)2 3
;3 4
public 
static 
void 
Add 
( 
Player %
player& ,
), -
{ 	
var 
nextId 
= 
Players  
.  !
Any! $
($ %
)% &
?' (
Players) 0
.0 1
Max1 4
(4 5
p5 6
=>7 9
p: ;
.; <
Id< >
)> ?
+@ A
$numB C
:D E
$numF G
;G H
player 
. 
Id 
= 
nextId 
; 
Players 
. 
Add 
( 
player 
) 
;  
} 	
public 
static 
void 
Update !
(! "
Player" (
player) /
)/ 0
{ 	
var 
existing 
= 
GetById "
(" #
player# )
.) *
Id* ,
), -
;- .
if 
( 
existing 
== 
null  
)  !
return" (
;( )
existing   
.   
Name   
=   
player   "
.  " #
Name  # '
;  ' (
existing!! 
.!! 
Team!! 
=!! 
player!! "
.!!" #
Team!!# '
;!!' (
existing"" 
."" 
Role"" 
="" 
player"" "
.""" #
Role""# '
;""' (
existing## 
.## 
Price## 
=## 
player## #
.### $
Price##$ )
;##) *
}$$ 	
public&& 
static&& 
void&& 
Delete&& !
(&&! "
int&&" %
id&&& (
)&&( )
{'' 	
var(( 
player(( 
=(( 
GetById((  
(((  !
id((! #
)((# $
;(($ %
if)) 
()) 
player)) 
!=)) 
null)) 
))) 
Players** 
.** 
Remove** 
(** 
player** %
)**% &
;**& '
}++ 	
},, 
}-- 